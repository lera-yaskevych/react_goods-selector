{"version":3,"sources":["App.tsx","Button.tsx","AdvancedApp.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","selectGood","good","setState","unselectAll","this","className","type","onClick","map","classNames","React","Component","Button","props","action","stylingClass","text","goodsInCart","addGood","prevState","removeGood","filter","product","itemsExceptLastOne","slice","length","lastItem","titleLengthCheck","join","includes","ReactDOM","render","AdvancedApp","document","getElementById"],"mappings":"wOAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAuEaC,E,4MA/DbC,MAAe,CACbC,aAAc,O,EAGhBC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,aAAcE,K,EAGhCE,YAAc,WACZ,EAAKD,SAAS,CAAEH,aAAc,M,4CAGhC,WAAU,IAAD,OACCA,EAAiBK,KAAKN,MAAtBC,aAER,OACE,sBAAKM,UAAU,MAAf,UACIN,EAKA,qCACE,oBAAIM,UAAU,aAAd,mBACMN,EADN,kBAGA,wBACEO,KAAK,SACLD,UAAU,wBACVE,QAASH,KAAKD,YAHhB,kBARF,oBAAIE,UAAU,aAAd,+BAiBF,oBAAIA,UAAU,YAAd,SACGT,EAAgBY,KAAI,SAAAP,GAAI,OACvB,qBAEEI,UAAWI,IAAW,YAAa,CACjC,sBAAuBV,IAAiBE,IAH5C,UAMGA,EACAF,IAAiBE,GAChB,wBACEK,KAAK,SACLD,UAAU,sBACVE,QAAS,WACP,EAAKP,WAAWC,IAJpB,sBAPGA,e,GAvCDS,IAAMC,W,QCZXC,EAA0B,SAACC,GACtC,IAAQC,EAA+BD,EAA/BC,OAAQC,EAAuBF,EAAvBE,aAAcC,EAASH,EAATG,KAE9B,OACE,wBACEV,KAAK,SACLC,QAASO,EACTT,UAAWU,EAHb,SAKGC,KCdDpB,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAqFaC,E,4MA7EbC,MAAe,CACbmB,YAAa,I,EAGfC,QAAU,SAACjB,GACT,EAAKC,UAAS,SAACiB,GACb,MAAO,CACLF,YAAY,GAAD,mBAAME,EAAUF,aAAhB,CAA6BhB,S,EAK9CmB,WAAa,SAACnB,GACZ,EAAKC,UAAS,SAACiB,GACb,MAAO,CACLF,YAAaE,EAAUF,YAAYI,QAAO,SAAAC,GAAO,OAAIA,IAAYrB,U,EAKvEE,YAAc,WACZ,EAAKD,SAAS,CAAEe,YAAa,M,4CAG/B,WAAU,IAAD,OACCA,EAAgBb,KAAKN,MAArBmB,YACFM,EAAqBN,EAAYO,MAAM,EAAGP,EAAYQ,OAAS,GAC/DC,EAAWT,EAAYO,MAAMP,EAAYQ,OAAS,GAElDE,EAAmBV,EAAYQ,OAAS,EAArB,UAClBF,EAAmBK,KAAK,MADN,gBACmBF,EADnB,2BAElBT,EAFkB,gBAIzB,OACE,sBAAKZ,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SACGY,EAAYQ,OAASE,EAAmB,sBAEzCV,EAAYQ,QACZ,cAAC,EAAD,CACEX,OAAQV,KAAKD,YACbY,aAAa,wBACbC,KAAK,MAGT,oBAAIX,UAAU,YAAd,SACGT,EAAgBY,KAAI,SAAAP,GAAI,OACvB,qBAEEI,UAAU,YAFZ,UAIGJ,EACAgB,EAAYY,SAAS5B,GACpB,cAAC,EAAD,CACEa,OAAQ,WACN,EAAKM,WAAWnB,IAElBc,aAAa,sBACbC,KAAK,WAGP,cAAC,EAAD,CACEF,OAAQ,WACN,EAAKI,QAAQjB,IAEfc,aAAa,mBACbC,KAAK,UAlBJf,e,GAjDDS,IAAMC,WCjBxBmB,IAASC,OACP,sBAAK1B,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC2B,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.85818757.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGood: 'Jam',\n  };\n\n  selectGood = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  unselectAll = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        {!selectedGood ? (\n          <h1 className=\"App__title\">\n            No goods selected\n          </h1>\n        ) : (\n          <>\n            <h1 className=\"App__title\">\n              {`${selectedGood} is selected`}\n            </h1>\n            <button\n              type=\"button\"\n              className=\"App__button--unselect\"\n              onClick={this.unselectAll}\n            >\n              X\n            </button>\n          </>\n        )}\n        <ul className=\"App__list\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={classNames('App__item', {\n                'App__item--selected': selectedGood === good,\n              })}\n            >\n              {good}\n              {selectedGood === good || (\n                <button\n                  type=\"button\"\n                  className=\"App__button--select\"\n                  onClick={() => {\n                    this.selectGood(good);\n                  }}\n                >\n                  Select\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport './App.scss';\n\ntype Props = {\n  action: () => void,\n  stylingClass: string,\n  text: string,\n};\n\nexport const Button: React.FC<Props> = (props) => {\n  const { action, stylingClass, text } = props;\n\n  return (\n    <button\n      type=\"button\"\n      onClick={action}\n      className={stylingClass}\n    >\n      {text}\n    </button>\n  );\n};\n","import React from 'react';\nimport { Button } from './Button';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goodsInCart: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goodsInCart: [],\n  };\n\n  addGood = (good: string) => {\n    this.setState((prevState: State): State => {\n      return {\n        goodsInCart: [...prevState.goodsInCart, good],\n      };\n    });\n  };\n\n  removeGood = (good: string) => {\n    this.setState((prevState: State): State => {\n      return {\n        goodsInCart: prevState.goodsInCart.filter(product => product !== good),\n      };\n    });\n  };\n\n  unselectAll = () => {\n    this.setState({ goodsInCart: [] });\n  };\n\n  render() {\n    const { goodsInCart } = this.state;\n    const itemsExceptLastOne = goodsInCart.slice(0, goodsInCart.length - 1);\n    const lastItem = goodsInCart.slice(goodsInCart.length - 1);\n\n    const titleLengthCheck = goodsInCart.length > 1\n      ? `${itemsExceptLastOne.join(', ')} and ${lastItem} are selected`\n      : `${goodsInCart} is selected`;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {goodsInCart.length ? titleLengthCheck : 'No goods in cart'}\n        </h1>\n        {!goodsInCart.length || (\n          <Button\n            action={this.unselectAll}\n            stylingClass=\"App__button--unselect\"\n            text=\"X\"\n          />\n        )}\n        <ul className=\"App__list\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className=\"App__item\"\n            >\n              {good}\n              {goodsInCart.includes(good) ? (\n                <Button\n                  action={() => {\n                    this.removeGood(good);\n                  }}\n                  stylingClass=\"App__button--remove\"\n                  text=\"Remove\"\n                />\n              ) : (\n                <Button\n                  action={() => {\n                    this.addGood(good);\n                  }}\n                  stylingClass=\"App__button--add\"\n                  text=\"Add\"\n                />\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport AdvancedApp from './AdvancedApp';\n\nReactDOM.render(\n  <div className=\"container\">\n    <App />\n    <AdvancedApp />\n  </div>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}