{"version":3,"sources":["App.tsx","AdvancedApp.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","selectGood","good","setState","unselectAll","this","className","type","onClick","map","classNames","React","Component","goodsInCart","addGood","push","prevState","removeGood","goodToRemove","findIndex","product","splice","length","slice","join","includes","ReactDOM","render","AdvancedApp","document","getElementById"],"mappings":"wOAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAyEaC,E,4MAjEbC,MAAe,CACbC,aAAc,O,EAGhBC,WAAa,SAACC,GACZ,EAAKH,MAAMC,aAAeE,EAC1B,EAAKC,SAAS,CAAEH,aAAcE,K,EAGhCE,YAAc,WACZ,EAAKL,MAAMC,aAAe,KAC1B,EAAKG,SAAS,CAAEH,aAAc,Q,4CAGhC,WAAU,IAAD,OACCA,EAAiBK,KAAKN,MAAtBC,aAER,OACE,sBAAKM,UAAU,MAAf,UACIN,EAKA,qCACE,oBAAIM,UAAU,aAAd,mBACMN,EADN,kBAGA,wBACEO,KAAK,SACLD,UAAU,wBACVE,QAASH,KAAKD,YAHhB,kBARF,oBAAIE,UAAU,aAAd,+BAiBF,oBAAIA,UAAU,YAAd,SACGT,EAAgBY,KAAI,SAAAP,GAAI,OACvB,qBAEEI,UAAWI,IAAW,YAAa,CACjC,sBAAuBV,IAAiBE,IAH5C,UAMGA,EACAF,IAAiBE,GAChB,wBACEK,KAAK,SACLD,UAAU,sBACVE,QAAS,WACP,EAAKP,WAAWC,IAJpB,sBAPGA,e,GAzCDS,IAAMC,WClBlBf,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAsGaC,E,4MA9FbC,MAAe,CACbc,YAAa,I,EAGfC,QAAU,SAACZ,GACT,EAAKH,MAAMc,YAAYE,KAAKb,GAC5B,EAAKC,UAAS,SAACa,GACb,MAAO,CACLH,YAAaG,EAAUH,iB,EAK7BI,WAAa,SAACf,GACZ,IAAMgB,EAAe,EAAKnB,MAAMc,YAAYM,WAAU,SAAAC,GAAO,OAAIA,IAAYlB,KAE7E,EAAKH,MAAMc,YAAYQ,OAAOH,EAAc,GAE5C,EAAKf,UAAS,SAACa,GACb,MAAO,CACLH,YAAaG,EAAUH,iB,EAK7BT,YAAc,WACZ,EAAKL,MAAMc,YAAc,GACzB,EAAKV,SAAS,CAAEU,YAAa,M,4CAG/B,WAAU,IAAD,OACCA,EAAgBR,KAAKN,MAArBc,YAER,OACE,sBAAKP,UAAU,MAAf,UAC0B,IAAvBO,EAAYS,OACX,oBAAIhB,UAAU,aAAd,8BAIA,qCACE,oBAAIA,UAAU,aAAd,SAC0B,IAAvBO,EAAYS,OAAZ,UACIT,EADJ,0BAGIA,EAAYU,MAAM,EAAGV,EAAYS,OAAS,GAAGE,KAAK,MAHtD,iCAIOX,EAAYU,MAAMV,EAAYS,OAAS,GAJ9C,mBAOH,wBACEf,KAAK,SACLD,UAAU,wBACVE,QAASH,KAAKD,YAHhB,kBASJ,oBAAIE,UAAU,YAAd,SACGT,EAAgBY,KAAI,SAAAP,GAAI,OACvB,qBAEEI,UAAU,YAFZ,UAIGJ,EACAW,EAAYY,SAASvB,GACpB,wBACEK,KAAK,SACLD,UAAU,sBACVE,QAAS,WACP,EAAKS,WAAWf,IAJpB,oBAUA,wBACEK,KAAK,SACLD,UAAU,mBACVE,QAAS,WACP,EAAKM,QAAQZ,IAJjB,mBAfGA,e,GA9DDS,IAAMC,WChBxBc,IAASC,OACP,sBAAKrB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAACsB,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.8f2ff088.chunk.js","sourcesContent":["import React, { Props } from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string | null;\n};\n\nclass App extends React.Component<Props<State>, State> {\n  state: State = {\n    selectedGood: 'Jam',\n  };\n\n  selectGood = (good: string) => {\n    this.state.selectedGood = good;\n    this.setState({ selectedGood: good });\n  };\n\n  unselectAll = () => {\n    this.state.selectedGood = null;\n    this.setState({ selectedGood: null });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        {!selectedGood ? (\n          <h1 className=\"App__title\">\n            No goods selected\n          </h1>\n        ) : (\n          <>\n            <h1 className=\"App__title\">\n              {`${selectedGood} is selected`}\n            </h1>\n            <button\n              type=\"button\"\n              className=\"App__button--unselect\"\n              onClick={this.unselectAll}\n            >\n              X\n            </button>\n          </>\n        )}\n        <ul className=\"App__list\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={classNames('App__item', {\n                'App__item--selected': selectedGood === good,\n              })}\n            >\n              {good}\n              {selectedGood === good || (\n                <button\n                  type=\"button\"\n                  className=\"App__button--select\"\n                  onClick={() => {\n                    this.selectGood(good);\n                  }}\n                >\n                  Select\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Props } from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goodsInCart: string[];\n};\n\nclass App extends React.Component<Props<State>, State> {\n  state: State = {\n    goodsInCart: [],\n  };\n\n  addGood = (good: string) => {\n    this.state.goodsInCart.push(good);\n    this.setState((prevState: State): State => {\n      return {\n        goodsInCart: prevState.goodsInCart,\n      };\n    });\n  };\n\n  removeGood = (good: string) => {\n    const goodToRemove = this.state.goodsInCart.findIndex(product => product === good);\n\n    this.state.goodsInCart.splice(goodToRemove, 1);\n\n    this.setState((prevState: State): State => {\n      return {\n        goodsInCart: prevState.goodsInCart,\n      };\n    });\n  };\n\n  unselectAll = () => {\n    this.state.goodsInCart = [];\n    this.setState({ goodsInCart: [] });\n  };\n\n  render() {\n    const { goodsInCart } = this.state;\n\n    return (\n      <div className=\"App\">\n        {goodsInCart.length === 0 ? (\n          <h1 className=\"App__title\">\n            No goods in cart\n          </h1>\n        ) : (\n          <>\n            <h1 className=\"App__title\">\n              {goodsInCart.length === 1 ? (\n                `${goodsInCart} is selected`\n              ) : (\n                `${goodsInCart.slice(0, goodsInCart.length - 1).join(', ')}\n                and ${goodsInCart.slice(goodsInCart.length - 1)} are selected`\n              )}\n            </h1>\n            <button\n              type=\"button\"\n              className=\"App__button--unselect\"\n              onClick={this.unselectAll}\n            >\n              X\n            </button>\n          </>\n        )}\n        <ul className=\"App__list\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className=\"App__item\"\n            >\n              {good}\n              {goodsInCart.includes(good) ? (\n                <button\n                  type=\"button\"\n                  className=\"App__button--remove\"\n                  onClick={() => {\n                    this.removeGood(good);\n                  }}\n                >\n                  Remove\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"App__button--add\"\n                  onClick={() => {\n                    this.addGood(good);\n                  }}\n                >\n                  Add\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport AdvancedApp from './AdvancedApp';\n\nReactDOM.render(\n  <div className=\"container\">\n    <App />\n    <AdvancedApp />\n  </div>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}